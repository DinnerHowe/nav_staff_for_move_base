CROS/CRUISE 模块
非初学者: 如果你已经很熟悉 ROS fuerte或更早期版本的使用，而只是想使用在hydro和indigo中开始采用的最新编译构建系统catkin，那你可以深入学习catkin教程。 
初学者：如果你之前没有接触过linux以及ros，也许先学习一些有关linux命令行工具的快速使用教程会对你很有帮助，这里有篇好教程（英文）以及这里有ros基础教程，我们建议所有人学完整个“ROS初级”教程以方便理解新增的功能特性。
Description: 本教程介绍cruise包的使用方法。
Maintainer: 徐志浩（Howe）
Author: 徐志浩，zhihao@iscas.ac.cn 
Source: git https://github.com/DinnerHowe/slam_howe.git (branch: indigo-devel)
Version 1.0
1.硬件及驱动
a）硬件
本模块硬件需求主要包括以下部分：
Kinect传感器
Turtlebot base或者icreat base或其他拥有类似功能的硬件 
b）环境
本模块的运行环境是ROS indigo以及 ubuntu 14.04
2.初始化
a)安装功能包：
待定
b)一键安装环境：
待定

c)自定义安装环境：
待定
d)自定义工作空间：
待定
3.运行cruise模块
在运行如下命令前确保机器人已经连接并且开启。
打开一个新终端并且运行如下命令：
roslaunch turtlebot_bringup minimal.launch
运行该命令后，再打开一个新的终端输入以下命名载入地图：
export TURTLEBOT_MAP_FILE=path/file_name.yaml
roslaunch turtlebot_navigation amcl_demo.launch
再打开一个终端输入以下命令：
roslaunch turtlebot_rviz_launchers view_navigation.launch --screen
最后打开一个终端输入以下命令：
rosrun cruise cruise.py
然后按照终端提示输入需要巡航的地点数量，并且在地图上用publish point按键选取	需要巡航的点。接着机器人就会按照要求依次前往各个点。
或者输入：
roslaunch cruise cruise.launch
然后在同一个终端中输入需要巡航的地点数量，并且在地图上用publish point按键选	取需要巡航的点。接着机器人就会按照要求依次前往各个点。

4.Structure graph
cruise的结构图如下：

